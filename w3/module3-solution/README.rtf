{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red50\green98\blue178;\red0\green0\blue0;
\red148\green6\blue75;\red245\green245\blue245;\red101\green71\blue146;\red132\green134\blue132;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\paperw11900\paperh16840\margl1440\margr1440\vieww24120\viewh11320\viewkind0
\deftab720
\pard\pardeftab720\sl600\sa320

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Module 3 Coding Assignment\
\pard\pardeftab720\sa320
{\field{\*\fldinst{HYPERLINK "https://www.coursera.org/learn/single-page-web-apps-with-angularjs"}}{\fldrslt 
\b0\fs32 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Click here to SIGN UP for the 
\i\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Single Page Web Applications with AngularJS
\i0\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  course on Coursera}}
\b0\fs32 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 . It's FREE!\
\pard\pardeftab720\sa320

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Time to put all that knowledge to code!
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl360

\b\fs36 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl440\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Time to Complete\
\pard\pardeftab720\sa320

\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 It should take about an 1 hour or less.\
\pard\pardeftab720\sa320

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Ask questions in {\field{\*\fldinst{HYPERLINK "https://www.coursera.org/learn/single-page-web-apps-with-angularjs/discussions/weeks/3"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Week 3 Discussion Forum}} if you get stuck! We are all learning, and going through getting stuck and then unstuck (even with someone\'92s help) can be a very valuable learning experience!
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl300

\b\fs30 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl360\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DO NOT be scared by the length of this assignment! It\'92s actually a fairly short one. I just wanted to explain everything as clearly as I could and break it down into smaller steps for your benefit.\
\pard\pardeftab720\sl360

\fs36 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl440\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Assignment Instructions\
\pard\pardeftab720\sl300

\fs30 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl360\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 General Idea\
\pard\pardeftab720\sa320

\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You are going to be building a much simplified search of the menu item descriptions using the restaurant server REST API we used in Lecture 25, Part 2.\
The idea here is for the user to search the descriptions of menu items. Then, given the list of matches of his search, give the user the ability to throw the items they for sure don't want off the list, thus narrowing it down to what they do want.\
Your task is create a text box and a button with the label "Narrow It Down For Me!".\
Initially, the user should just see a screen with the textbox and the "Narrow It Down For Me!" button. Once the user enters something into the textbox and clicks the button, your app will reach out to the server and retrieve the list of menu items for the entire menu. Once retrieved, your task is to loop through all the items and, for each item, do a simple check if the string being searched for by the user appears anywhere in the description of the item. If it does, that item gets placed in a special 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  array. If it doesn't, you simply move on to the next item.\
Once your app goes through all the items, it should display the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  list of items. Each item in the list should show the name of the menu item, its short_name, and the description. You can display the items in a simple unordered list, with each piece of information separated by a comma. OR be fancier and use some sort of a grid. Either way is fine. We are not concentrating on style in this class.\
You should also provide a "Don't want this one!" button next to each item in the list to give the user the ability to remove an item from that list.\
If nothing is found as a result of the search OR if the user leaves the textbox empty and clicks the "Narrow It Down For Me!" button, you should simply display the message "Nothing found".\
To make things a bit easier, you can retrieve the items from the server every time the user clicks the "Narrow It Down For Me!" button. You don't have to cache the response. In other words, no matter what actions the user has taken, if the "Narrow It Down For Me!" button is clicked, all the data gets wiped out and the whole process starts all over again. No requirement to remember what the user chose to throw off the list last time.\
\pard\pardeftab720\sl300

\b\fs30 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl360\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rules\
\pard\pardeftab720\sa320

\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Breaking one of these rules will cause you to fail the assignment:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You are not allowed to use regular HTML 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 onclick
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  attribute to bind behavior to the button. You 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 must
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  use the AngularJS way of binding behavior.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 At no point should your Javascript code look up 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 anything
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  in the DOM of the browser.\
\pard\pardeftab720\sl300

\b\fs30 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl360\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Steps\
\pard\pardeftab720\sa320

\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Here is what you will need to do to complete the assignment:\
\pard\pardeftab720\sl320

\b \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl400\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Steps for Setups (similar to all other assignments)\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0
\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (If you haven\'92t already) Create a GitHub.com account and a repository that you will use for this class.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (If you haven\'92t already) Follow the Development Setup Video (beginning of Module 1) instructions on how to create a repository and set it up such that you can host and view your finished web pages on GitHub Pages, i.e., GitHub.io domain name. You will need to provide that URL for your peer review.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a folder in your repository that will serve as a container folder for your solution to this assignment. You can call it whatever you want. For example, 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 module3-solution
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  or 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 mod3_solution
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , etc.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You can do this by 'cloning' your repository with 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 git clone https://www.github.com/your_repo_url
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  to your local machine, creating 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 module3-solution
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  folder in the root of the repository directory along with a README.txt inside of the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 module3-solution
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  directory. Then, you would do 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 git add .
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , followed by 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 git commit -m 'New folder'
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , followed by 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 git push
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  to upload the new folder with the README.txt to the GitHub repository.\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 HTML/CSS for the assignment\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Option 1: Copy the 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 contents
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  of the folder 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 assignment3-starter-code
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  into the newly created folder from the previous step. If you cloned this repository, the assignment 3 folder is located in
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 root_dir_of_your_local_repo/assignments/assignment3/assignment3-starter-code
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\ls2\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f2 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Option 2: Create the HTML/CSS yourself. Make sure to name the HTML file 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 index.html
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 . The only requirement is that your HTML have the required parts as described in the General Idea section. The rest is up to you.\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Import AngularJS into your project and place a 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <script>
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  tag right before the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 </body>
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  tag.\
\pard\pardeftab720\sl320

\b \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl400\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Steps for Implementing Assignment Requirements\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0
\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declare 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ng-app
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  either on the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 html
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  or the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 body
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  element. Name your app 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 NarrowItDownApp
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 app.js
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  in your project and declare an Angular module to match your 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ng-app
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  declaration.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declare and create a NarrowItDownController (with controller as syntax) that will wrap your search textbox and button as well as the list of found items.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declare and create MenuSearchService. The service should have the following method: getMatchedMenuItems(searchTerm). That method will be responsible for reaching out to the server (using the $http service) to retrieve the list of all the menu items. Once it gets all the menu items, it should loop through them to pick out the ones whose description matches the searchTerm. Once a list of found items is compiled, it should return that list (wrapped in a promise). Remember that the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 then
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  function itself returns a promise. Your method would roughly look like this:\uc0\u8232 
\f1\fs28 \cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 return\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  \cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 $http\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ...\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ).\cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 then\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 function\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  (result) \{\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl380
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 // process result and only keep items that match\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 var\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  foundItems\cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ...\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	7.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	8.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf8 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 // return processed items\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	9.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2     \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 return\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  foundItems;\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	10.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \});\uc0\u8232 
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \uc0\u8232 The URL for the REST Endpoint is {\field{\*\fldinst{HYPERLINK "https://davids-restaurant.herokuapp.com/menu_items.json"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 https://davids-restaurant.herokuapp.com/menu_items.json}}.\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	11.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The NarrowItDownController should be injected with the MenuSearchService. The controller should call the getMatchedMenuItems method when appropriate and store the result in a property called 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  attached to the controller instance.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	12.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Declare and create 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 foundItems
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  directive. The list should be displayed using this 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 directive
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  which takes the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 array of items specified on it as an attribute (think one-way binding with '<'). To implement the functionality of the "Don't want this one!" button, the directive should also provide an on-remove attribute that will use function reference binding to invoke the parent controller removal an item from the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  array based on an index into the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 array. The index should be passed in from the directive to the controller. (Note that we implemented almost identical type of behavior in the Lecture 30 Part 2, so as long as you understood that code, it should be very close to copy/paste). In the NarrowItDownController, simply remove that item from the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  array. You can do that using the{\field{\*\fldinst{HYPERLINK "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Array's splice() method}}. For example, to remove an item with the index of 3 from the 
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  array, you would call
\f1\fs28 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 found.splice(3, 1);
\f0\fs32 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .\
\pard\pardeftab720\sl320

\b \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl400\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Important Implementation Notes\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\b0 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make sure all of your Javascript code is inside of an IIFE. (
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If you don't know what that is or why we'd want to use it, brush up on it by looking through module 4 of {\field{\*\fldinst{HYPERLINK "https://www.coursera.org/learn/html-css-javascript-for-web-developers/"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 HTML, CSS, and Javascript for Web Developers}} course I teach.
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 )\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make sure all of your dependency injections are protected from minification.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 After you are done and satisfied with your solution, don't forget to add/commit/push your code to your repository.\
\pard\pardeftab720\sl360

\b\fs36 \cf3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\sl440\sa320
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 IMPORTANT REMINDERS:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls5\ilvl0
\b0\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Closely follow the submission guidelines for this assignment on Coursera.org\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 sure
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  you provide the correct URL in your submission (it should be GitHub
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .io
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 not
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  GitHub
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .com
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 )\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Make 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 sure
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  to TEST your assignment not just on your local machine, but ALSO once you deploy it on GitHub, using the URL you are providing as part of your submission.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 This assignment will be peer-reviewed (and graded). The guidance will be given such that if submission instructions are not followed, the assignment is to be failed. This includes providing the wrong URL for your deployment. Following instructions is very much part of software development. After all, that's what software requirements are - instructions to follow.\
}